---
import BaseLayout from '../layouts/BaseLayout.astro';
import Footer from '../components/Footer.astro';
import { Image } from 'astro:assets';

const footerLinks = [
  { href: "/", text: "Home" },
  { href: "/crazy-crosswords", text: "Game Details" },
  { href: "/privacy-policy", text: "Privacy Policy" },
  { href: "/terms", text: "Terms & Conditions" }
];
---

<BaseLayout 
  title="How to Play - Crazy Crosswords"
  description="Learn how to play Crazy Crosswords - arrange letters to form words in rows and columns."
>
  <div class="guide-container">
    <header class="guide-header">
      <h1>How to Play <span class="highlight">Crazy</span>Crosswords</h1>
    </header>
    
    <main class="guide-content">
      <section class="overview">
        <h2>Game Overview</h2>
        <p>CrazyCrosswords is a unique word puzzle game where you rearrange letters to form words both horizontally and vertically. Each puzzle presents you with a grid of letters that you need to reorganize to create valid words in both directions.</p>
        
        <div class="video-section">
          <h3>Watch Gameplay</h3>
          <div class="video-container">
            <video controls poster="/images/crazy-crosswords/gameplay-thumbnail.png" class="gameplay-video" preload="none">
              <source data-src="/images/crazy-crosswords/gameplay-video.mp4" type="video/mp4">
              Your browser does not support the video tag.
            </video>
            <div class="play-overlay">
              <button class="play-button" aria-label="Play video">
                <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="#ffffff">
                  <path d="M8 5v14l11-7z"/>
                </svg>
              </button>
            </div>
          </div>
        </div>
        

      </section>

      <section class="rules">
        <h2>Basic Rules</h2>
        <ol>
          <li>Rearrange tiles to form correct words in all rows and columns</li>
          <li>Tap and drag any letter to swap it with any other letter on the board</li>
          <li>Form words that match the clues:
            <ul>
              <li>Rows: Read left to right</li>
              <li>Columns: Read top to bottom</li>
            </ul>
          </li>
          <li><span class="color-indicator green"></span>Correct words turn green and update the clue icon</li>
          <li>Complete the level by forming all correct words</li>
        </ol>
        
        <div class="tip">
          <strong>Pro Tip:</strong> With the ability to swap any letters, try focusing on completing one word at a time. Look for letters you need anywhere on the board!
        </div>
      </section>
      
      <section class="controls">
        <h2>Controls</h2>
        <p>Intuitive controls make CrazyCrosswords easy to play:</p>
        <ul>
          <li>Tap and hold any letter to select it</li>
          <li>Drag the letter to any other position on the board to swap</li>
          <li>Tap clue buttons on the sides to see target words</li>
        </ul>
      </section>
      
      <section class="powerups">
        <h2>Powerups</h2>
        <p>When you need a little help, these powerups can save the day:</p>
        
        <div class="powerup-list">
          <div class="powerup">
            <h3>Reveal Word</h3>
            <p>This powerup reveals the correct arrangement of letters for the currently selected clue (row or column). Use it when you're stuck on a particularly tricky word!</p>
          </div>
          
          <div class="powerup">
            <h3>Shuffle Hint</h3>
            <p>This powerup rearranges the letters in the currently selected row or column, giving you a fresh perspective that might help you spot the solution.</p>
          </div>
          
          <div class="powerup">
            <h3>Using Powerups</h3>
            <p>Powerups require coins to use. Select a clue first (row or column), then tap the powerup you want to use. The powerup will affect only the currently selected clue.</p>
          </div>
        </div>
      </section>
      
      <div class="download-section">
        <div class="store-buttons">
          <a href="https://apps.apple.com/us/app/crazy-crosswords/id6720760088" class="store-button" target="_blank" rel="noopener">
            <img src="/images/badges/app-store-badge.svg" alt="Download on the App Store" class="store-badge">
          </a>
          <a href="https://play.google.com/store/apps/details?id=com.imperiumplay.CrazyCrossword" class="store-button" target="_blank" rel="noopener">
            <img src="/images/badges/google-play-badge.png" alt="Get it on Google Play" class="store-badge google-play">
          </a>
        </div>
      </div>
    </main>
  </div>
  
  <Footer links={footerLinks} />
</BaseLayout>

<script>
  // Wait for the DOM to be fully loaded
  document.addEventListener('DOMContentLoaded', () => {
    const videoContainer = document.querySelector('.video-container');
    const video = document.querySelector('.gameplay-video');
    const playOverlay = document.querySelector('.play-overlay');
    const videoSource = video.querySelector('source');
    
    if (videoContainer && video && playOverlay && videoSource) {
      // Function to load and play the video
      function loadAndPlayVideo() {
        // Set the actual source from data-src
        const actualSrc = videoSource.getAttribute('data-src');
        videoSource.setAttribute('src', actualSrc);
        
        // Load the video
        video.load();
        
        // Play the video
        video.play()
          .then(() => {
            // Hide the overlay when video starts playing
            playOverlay.style.display = 'none';
          })
          .catch(error => {
            console.error('Error playing video:', error);
            // Keep overlay visible if autoplay fails (common on mobile)
          });
      }
      
      // Add click event to the container
      videoContainer.addEventListener('click', (e) => {
        loadAndPlayVideo();
      });
      
      // Add intersection observer for auto-loading when scrolled into view
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          // If video is in viewport and src hasn't been set yet
          if (entry.isIntersecting && !videoSource.hasAttribute('src')) {
            // Just set the source but don't autoplay
            const actualSrc = videoSource.getAttribute('data-src');
            videoSource.setAttribute('src', actualSrc);
            video.load();
            // Don't remove the overlay or autoplay
          }
        });
      }, { threshold: 0.5 });
      
      // Start observing the video element
      observer.observe(videoContainer);
    }
  });
</script>

<style>
.guide-container {
  max-width: 900px;
  margin: 0 auto;
  padding: 2rem;
  line-height: 1.6;
}

.guide-header {
  text-align: center;
  margin-bottom: 3rem;
  padding-bottom: 2rem;
  border-bottom: 2px solid #f0f0f0;
}

.guide-header h1 {
  font-size: 2.5rem;
  margin: 0;
  font-weight: 300;
  color: #333;
}

.guide-content section {
  margin-bottom: 3rem;
}

.guide-content h2 {
  color: #7c9885;
  font-size: 1.8rem;
  font-weight: 400;
  margin-bottom: 1rem;
  padding-bottom: 0.5rem;
  border-bottom: 1px solid #e0e0e0;
}

.guide-content h3 {
  color: #7c9885;
  font-size: 1.3rem;
  font-weight: 400;
  margin: 1.5rem 0 0.5rem 0;
}

.guide-content p {
  margin: 1rem 0;
  color: #555;
}

.guide-content ol {
  padding-left: 1.5rem;
}

.guide-content ul {
  padding-left: 1.5rem;
}

.guide-content li {
  margin: 0.5rem 0;
}

.tip {
  background: #f8f9fa;
  border-left: 4px solid #7c9885;
  padding: 1rem 1.5rem;
  margin: 2rem 0;
  border-radius: 0 8px 8px 0;
}

.tip strong {
  color: #7c9885;
}

.powerup-list {
  margin-top: 1.5rem;
}

.powerup {
  background: #f9f9f9;
  padding: 1.5rem;
  margin: 1rem 0;
  border-radius: 8px;
  border: 1px solid #e0e0e0;
}

.powerup h3 {
  margin-top: 0;
}

.color-indicator {
  display: inline-block;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  margin-right: 8px;
  vertical-align: middle;
}

.green {
  background-color: #4CAF50;
}

.video-section {
  margin: 2rem 0;
}

.video-container {
  max-width: 300px;
  margin: 1rem auto;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 8px 24px rgba(0,0,0,0.15);
  aspect-ratio: 9/16;
  position: relative;
  cursor: pointer;
}

.gameplay-video {
  width: 100%;
  height: auto;
  display: block;
}

.play-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.2);
  transition: background-color 0.3s ease;
}

.play-overlay:hover {
  background-color: rgba(0, 0, 0, 0.4);
}

.play-button {
  background: none;
  border: none;
  cursor: pointer;
  width: 60px;
  height: 60px;
  padding: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.6);
  border-radius: 50%;
  transition: transform 0.2s ease, background-color 0.2s ease;
}

.play-button:hover {
  transform: scale(1.1);
  background-color: rgba(0, 0, 0, 0.8);
}

.download-section {
  text-align: center;
  margin: 3rem 0 2rem 0;
  padding-top: 2rem;
  border-top: 1px solid #e0e0e0;
}

.store-buttons {
  display: flex;
  gap: 1rem;
  justify-content: center;
}

.store-button {
  display: flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;
  transition: all 0.3s ease;
  min-height: 44px;
}

.store-button:hover {
  transform: translateY(-2px);
  filter: brightness(1.05);
}

.store-badge {
  height: 40px;
  width: auto;
}

.store-badge.google-play {
  height: 60px;
}

@media (max-width: 768px) {
  .guide-container {
    padding: 1rem;
  }
  
  .guide-header h1 {
    font-size: 2rem;
  }
  
  .guide-content h2 {
    font-size: 1.5rem;
  }
  
  .guide-content h3 {
    font-size: 1.2rem;
  }
  
  .video-container {
    max-width: 250px;
  }
  
  .store-buttons {
    flex-direction: column;
    gap: 0.8rem;
    align-items: center;
  }
}

@media (max-width: 480px) {
  .guide-container {
    padding: 0.5rem;
  }
  
  .guide-header {
    margin-bottom: 2rem;
  }
  
  .guide-header h1 {
    font-size: 1.8rem;
  }
  
  .guide-content section {
    margin-bottom: 2rem;
  }
  
  .video-container {
    max-width: 200px;
  }
}
</style>